<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.kohsuke</groupId>
  <artifactId>github-api</artifactId>
  <version>1.318-SNAPSHOT</version>
  <name>GitHub API for Java</name>
  <url>https://github-api.kohsuke.org/</url>
  <description>GitHub API for Java</description>

  <parent>
    <groupId>org.kohsuke</groupId>
    <artifactId>github-api-parent</artifactId>
    <version>1.318-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <jacoco.surefire.argLine />
    <surefire.argLine />
  </properties>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>**/wiremock/**</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.10</version>
        <configuration>
          <!-- no need to get data about external code. It dramatically reduces performance of JaCoCo for nothing -->
          <excludes>
            <exclude>/org/kohsuke/github/extras/HttpClient*</exclude>
            <exclude>/org/kohsuke/github/example/*</exclude>
            <exclude>/org/kohsuke/github/extras/OkHttpConnector*</exclude>
            <exclude>/org/kohsuke/github/extras/OkHttp3Connector*</exclude>
            <exclude>/org/kohsuke/github/extras/okhttp3/ObsoleteUrlFactory*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <propertyName>jacoco.surefire.argLine</propertyName>
            </configuration>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>METHOD</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco.coverage.target.bundle.method}</minimum>
                    </limit>
                  </limits>
                </rule>
                <rule>
                  <!--We end up with chatty logs, but it shows us which particular classes    -->
                  <!--are lacking in coverage. If this is too much, just remove the           -->
                  <!--<element>CLASS</element> tag below.                                     -->
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>METHOD</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco.coverage.target.class.method}</minimum>
                    </limit>
                  </limits>
                  <excludes>
                    <!-- Java 11 multi-release overlay problems -->
                    <exclude>org.kohsuke.github.extras.HttpClientGitHubConnector.**</exclude>
                    <exclude>org.kohsuke.github.extras.HttpClientGitHubConnector</exclude>

                    <!-- Code implemented externally -->
                    <exclude>org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory.**</exclude>
                    <exclude>org.kohsuke.github.extras.okhttp3.ObsoleteUrlFactory</exclude>

                    <!-- Sample only -->
                    <exclude>org.kohsuke.github.example.*</exclude>

                    <!-- Deprecated -->
                    <exclude>org.kohsuke.github.extras.OkHttpConnector</exclude>
                    <exclude>org.kohsuke.github.extras.OkHttp3Connector</exclude>
                    <exclude>org.kohsuke.github.EnforcementLevel</exclude>
                    <exclude>org.kohsuke.github.GHPerson.1</exclude>
                    <exclude>org.kohsuke.github.GHCompare.User</exclude>

                    <!-- TODO: Some coverage, but more needed -->
                    <exclude>org.kohsuke.github.GHPullRequestReviewBuilder.DraftReviewComment</exclude>
                    <exclude>org.kohsuke.github.GHIssue.PullRequest</exclude>
                    <exclude>org.kohsuke.github.GHCommitSearchBuilder</exclude>
                    <exclude>org.kohsuke.github.GHRepositorySearchBuilder</exclude>
                    <exclude>org.kohsuke.github.GHUserSearchBuilder</exclude>

                    <!-- TODO: These still need test coverage -->
                    <exclude>org.kohsuke.github.GHBranchProtection.RequiredSignatures</exclude>
                    <exclude>org.kohsuke.github.GHBranchProtectionBuilder.Restrictions</exclude>
                    <exclude>org.kohsuke.github.GHBranchProtection.Restrictions</exclude>
                    <exclude>org.kohsuke.github.GHCommentAuthorAssociation</exclude>
                    <exclude>org.kohsuke.github.GHDeployKey</exclude>
                    <exclude>org.kohsuke.github.GHEmail</exclude>
                    <exclude>org.kohsuke.github.GHInvitation</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Authorship</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Commit</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestCommitDetail.CommitPointer</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestCommitDetail.Tree</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestCommitDetail</exclude>
                    <exclude>org.kohsuke.github.GHPullRequestFileDetail</exclude>
                    <exclude>org.kohsuke.github.GHReleaseUpdater</exclude>
                    <exclude>org.kohsuke.github.GHRequestedAction</exclude>
                    <exclude>org.kohsuke.github.GHVerifiedKey</exclude>
                  </excludes>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <annotationProcessorPaths>
            <annotationProcessorPath>
              <groupId>org.jenkins-ci</groupId>
              <artifactId>annotation-indexer</artifactId>
              <version>1.12</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
        <executions>
          <execution>
            <id>compile-java-11</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <release>11</release>
              <source>11</source>
              <target>11</target>
              <compileSourceRoots>
                <compileSourceRoot>${project.basedir}/src/main/java11</compileSourceRoot>
              </compileSourceRoots>
              <multiReleaseOutput>true</multiReleaseOutput>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <configuration>
              <argLine>@{jacoco.surefire.argLine} ${surefire.argLine}</argLine>
              <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>org.kohsuke.github.api</Automatic-Module-Name>
              <Multi-Release>true</Multi-Release>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.infradna.tool</groupId>
        <artifactId>bridge-method-injector</artifactId>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>spotless-check</id>
            <!-- runs in verify phase by default -->
            <goals>
              <!-- can be disabled using -Dspotless.check.skip=true -->
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <java>
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/main/java11/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>

            <eclipse>
              <file>${basedir}/src/build/eclipse/formatter.xml</file>
            </eclipse>

            <importOrder>
              <file>${basedir}/src/build/eclipse/eclipse.importorder</file>
            </importOrder>
            <removeUnusedImports />

            <trimTrailingWhitespace />
            <endWithNewline />

          </java>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.siom79.japicmp</groupId>
        <artifactId>japicmp-maven-plugin</artifactId>
        <configuration>
          <parameter>
            <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications>
            <onlyModified>true</onlyModified>
            <includeSynthetic>true</includeSynthetic>
            <excludes>
              <!-- Classes in internal are public but are considered private for API stability purposes -->
              <exclude>org.kohsuke.github.internal</exclude>
              <!-- TODO: started failing in CI recently. This is part of the multi-release structure. -->
              <exclude>org.kohsuke.github.extras.HttpClientGitHubConnector#HttpClientGitHubConnector(java.net.http.HttpClient)</exclude>
            </excludes>
          </parameter>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>cmp</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- This is needed in order to force junit4 and JTH tests to use newer hamcrest version -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.npathai</groupId>
      <artifactId>hamcrest-optional</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>com.infradna.tool</groupId>
      <artifactId>bridge-method-annotation</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- for stapler-jetty -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- for stapler-jetty -->
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- for stapler-jetty -->
    <dependency>
      <groupId>org.kohsuke.stapler</groupId>
      <artifactId>stapler</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kohsuke.stapler</groupId>
      <artifactId>stapler-jetty</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.squareup.okio</groupId>
      <artifactId>okio</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- This is the last version of okhttp3 that support UrlConnection -->
    <!-- The class using this has been deprecated, this dependency can be remove when that class is. -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp-urlconnection</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp</groupId>
      <artifactId>okhttp-urlconnection</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.kohsuke</groupId>
      <artifactId>wordnet-random-name</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8-standalone</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <!-- only enable slow-or-flaky-test if -Dtest= is not present -->
    <profile>
      <id>test-jwt-slow-multireleasejar-flaky</id>
      <activation>
        <property>
          <name>!test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>okhttp-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/github-api-${project.version}.jar</classesDirectory>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=okhttp</argLine>
                </configuration>
              </execution>
              <execution>
                <id>java11-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/github-api-${project.version}.jar</classesDirectory>
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=httpclient</argLine>
                </configuration>
              </execution>
              <execution>
                <id>java11-urlconnection-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/github-api-${project.version}.jar</classesDirectory>
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=urlconnection</argLine>
                </configuration>
              </execution>
              <execution>
                <id>slow-or-flaky-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/github-api-${project.version}.jar</classesDirectory>
                  <rerunFailingTestsCount>2</rerunFailingTestsCount>
                  <!-- There are some tests that take longer or are a little
                    flaky. Run them here. -->
                  <includesFile>src/test/resources/slow-or-flaky-tests.txt</includesFile>
                </configuration>
              </execution>
              <execution>
                <!-- Verify that JWT suite 0.11.x still works -->
                <id>jwt0.11.x-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <classesDirectory>${project.basedir}/target/github-api-${project.version}.jar</classesDirectory>
                  <useSystemClassLoader>false</useSystemClassLoader>
                  <excludesFile>src/test/resources/slow-or-flaky-tests.txt</excludesFile>
                  <argLine>@{jacoco.surefire.argLine} ${surefire.argLine} -Dtest.github.connector=okhttp</argLine>
                  <classpathDependencyExcludes>
                    <classpathDependencyExclude>io.jsonwebtoken:*</classpathDependencyExclude>
                  </classpathDependencyExcludes>
                  <additionalClasspathDependencies>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-api</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-impl</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                    <additionalClasspathDependency>
                      <groupId>io.jsonwebtoken</groupId>
                      <artifactId>jjwt-jackson</artifactId>
                      <version>0.11.5</version>
                    </additionalClasspathDependency>
                  </additionalClasspathDependencies>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ci-non-windows</id>
      <activation>
        <property>
          <name>enable-ci</name>
        </property>
        <os>
          <family>!windows</family>
        </os>
      </activation>
      <properties>
        <!-- Only fail code coverage on non-windows machines -->
        <jacoco.haltOnFailure>true</jacoco.haltOnFailure>
      </properties>
    </profile>
    <profile>
      <id>ci-all</id>
      <activation>
        <property>
          <name>enable-ci</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <!-- In CI, run check early in the build -->
                <phase>process-sources</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <id>enforce-jacoco-exist</id>
                <phase>verify</phase>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesExist>
                      <files>
                        <file>${project.build.directory}/jacoco-it.exec</file>
                      </files>
                    </requireFilesExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report-integration</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
